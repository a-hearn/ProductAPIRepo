{
	"info": {
		"_postman_id": "37177d2c-a7b5-4a4b-9454-0788e73f57d5",
		"name": "productsapp-automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"//Tomato Soup structure\r",
							"pm.test(\"1st product to have a Category\", function(){\r",
							" pm.response.to.have.jsonBody(\"[0].Category\")\r",
							"})\r",
							"\r",
							"pm.test(\"1st product to have an Id\", function(){\r",
							" pm.response.to.have.jsonBody(\"[0].Id\")\r",
							"})\r",
							"\r",
							"pm.test(\"1st product to have a Name\", function(){\r",
							" pm.response.to.have.jsonBody(\"[0].Name\")\r",
							"})\r",
							"\r",
							"pm.test(\"1st product to have a Price\", function(){\r",
							" pm.response.to.have.jsonBody(\"[0].Price\")\r",
							"})\r",
							"/*\r",
							"//Yo-yo structure\r",
							"\r",
							"pm.test(\"2nd product to have a Category\", function(){\r",
							" pm.response.to.have.jsonBody(\"[1].Category\")\r",
							"})\r",
							"\r",
							"pm.test(\"2nd product to have a Id\", function(){\r",
							" pm.response.to.have.jsonBody(\"[1].Id\")\r",
							"})\r",
							"\r",
							"pm.test(\"2nd product to have a Name\", function(){\r",
							" pm.response.to.have.jsonBody(\"[1].Name\")\r",
							"})\r",
							"\r",
							"pm.test(\"2nd product to have a Price\", function(){\r",
							" pm.response.to.have.jsonBody(\"[1].Price\")\r",
							"})\r",
							"\r",
							"//Hammer Structure\r",
							"pm.test(\"3rd product to have a Category\", function(){\r",
							" pm.response.to.have.jsonBody(\"[2].Category\")\r",
							"})\r",
							"\r",
							"pm.test(\"3rd product to have an Id\", function(){\r",
							" pm.response.to.have.jsonBody(\"[2].Id\")\r",
							"})\r",
							"\r",
							"pm.test(\"3rd product to have a Name\", function(){\r",
							" pm.response.to.have.jsonBody(\"[2].Name\")\r",
							"})\r",
							"\r",
							"pm.test(\"3rd product to have a Price\", function(){\r",
							" pm.response.to.have.jsonBody(\"[2].Price\")\r",
							"})\r",
							"*/\r",
							"\r",
							"//Tomato Soup Values \r",
							"\r",
							"pm.test(\"value of [0].Category to be Soup\", function(){\r",
							" pm.expect(\"Soup\").to.equal(jsonData[0].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [0].Id to be 1\", function(){\r",
							" pm.expect(1).to.equal(jsonData[0].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [0].Name to be Chicken Noodle\", function(){\r",
							" pm.expect(\"Chicken Noodle\").to.equal(jsonData[0].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [0].Price to be 2\", function(){\r",
							" pm.expect(2).to.equal(jsonData[0].Price)\r",
							"});\r",
							"\r",
							"//Yo-yo Values\r",
							"\r",
							"pm.test(\"value of [1].Category to be Fruit\", function(){\r",
							" pm.expect(\"Fruit\").to.equal(jsonData[1].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [1].Id to be 2\", function(){\r",
							" pm.expect(2).to.equal(jsonData[1].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [1].Name to be Apple\", function(){\r",
							" pm.expect(\"Apple\").to.equal(jsonData[1].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [1].Price to be 2.75\", function(){\r",
							" pm.expect(2.75).to.equal(jsonData[1].Price)\r",
							"});\r",
							"\r",
							"//Hammer Values\r",
							"\r",
							"pm.test(\"value of [2].Category to be Tools\", function(){\r",
							" pm.expect(\"Tools\").to.equal(jsonData[2].Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [2].Id to be 3\", function(){\r",
							" pm.expect(3).to.equal(jsonData[2].Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [2].Name to be Drill\", function(){\r",
							" pm.expect(\"Drill\").to.equal(jsonData[2].Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of [2].Price to be 9.99\", function(){\r",
							" pm.expect(9.99).to.equal(jsonData[2].Price)\r",
							"});\r",
							"\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							" pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							" pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44357/api/products",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44357",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product w/ ID of 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"//structure\r",
							"\r",
							"pm.test(\"product w/ ID 2 to have a Category\", function(){\r",
							" pm.response.to.have.jsonBody(\"Category\")\r",
							"})\r",
							"\r",
							"pm.test(\"product w/ ID 2 to have an Id\", function(){\r",
							" pm.response.to.have.jsonBody(\"Id\")\r",
							"})\r",
							"\r",
							"pm.test(\"product w/ ID 2 to have a Name\", function(){\r",
							" pm.response.to.have.jsonBody(\"Name\")\r",
							"})\r",
							"\r",
							"pm.test(\"product w/ ID 2 to have an Price\", function(){\r",
							" pm.response.to.have.jsonBody(\"Price\")\r",
							"})\r",
							"\r",
							"//values\r",
							"\r",
							"pm.test(\"value of Category of product w/ ID 2 to be Fruit\", function(){\r",
							" pm.expect(\"Fruit\").to.equal(jsonData.Category)\r",
							"});\r",
							"\r",
							"pm.test(\"value of Id of product w/ ID 2 to be 2\", function(){\r",
							" pm.expect(2).to.equal(jsonData.Id)\r",
							"});\r",
							"\r",
							"pm.test(\"value of Name of product w/ ID 2 to be Apple\", function(){\r",
							" pm.expect(\"Apple\").to.equal(jsonData.Name)\r",
							"});\r",
							"\r",
							"pm.test(\"value of Price of product w/ ID 2 to be 2.75\", function(){\r",
							" pm.expect(2.75).to.equal(jsonData.Price)\r",
							"});\r",
							"\r",
							"pm.test(\"response to be 200 OK\", function(){\r",
							" pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"response time less than 1000MS\", function(){\r",
							" pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:44357/api/products/2",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44357",
					"path": [
						"api",
						"products",
						"2"
					]
				}
			},
			"response": []
		}
	]
}